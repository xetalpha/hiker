{"last_chapter_rule":"","pageList":[{"col_type":"movie_3","name":"json","path":"json","rule":"js:\n\nvar json = {\n    \"result\": true,\n    \"msg\": \"\",\n    \"data\": {\n        \"filterList\": [{\n            \"filterName\": \"channelId\",\n            \"filterValueList\": [{\n                \"id\": \"50\",\n                \"name\": \"短剧\"\n            }, {\n                \"id\": \"3\",\n                \"name\": \"电视剧\"\n            }, {\n                \"id\": \"2\",\n                \"name\": \"电影\"\n            }, {\n                \"id\": \"8\",\n                \"name\": \"动漫\"\n            }, {\n                \"id\": \"10\",\n                \"name\": \"综艺\"\n            }, {\n                \"id\": \"5\",\n                \"name\": \"体育\"\n            }]\n        }, {\n            \"filterName\": \"areaId\",\n            \"filterValueList\": [{\n                \"id\": \"1\",\n                \"name\": \"大陆\"\n            }, {\n                \"id\": \"3\",\n                \"name\": \"美国\"\n            }, {\n                \"id\": \"8\",\n                \"name\": \"韩国\"\n            }, {\n                \"id\": \"7\",\n                \"name\": \"香港\"\n            }, {\n                \"id\": \"4\",\n                \"name\": \"日本\"\n            }, {\n                \"id\": \"12\",\n                \"name\": \"台湾\"\n            }, {\n                \"id\": \"2\",\n                \"name\": \"英国\"\n            }, {\n                \"id\": \"5\",\n                \"name\": \"加拿大\"\n            }, {\n                \"id\": \"9\",\n                \"name\": \"新加坡\"\n            }, {\n                \"id\": \"10\",\n                \"name\": \"法国\"\n            }, {\n                \"id\": \"11\",\n                \"name\": \"泰国\"\n            }, {\n                \"id\": \"13\",\n                \"name\": \"印度\"\n            }, {\n                \"id\": \"14\",\n                \"name\": \"西班牙\"\n            }, {\n                \"id\": \"15\",\n                \"name\": \"俄罗斯\"\n            }, {\n                \"id\": \"16\",\n                \"name\": \"马来西亚\"\n            }, {\n                \"id\": \"6\",\n                \"name\": \"其他\"\n            }]\n        }, {\n            \"filterName\": \"year\",\n            \"filterValueList\": [{\n                \"id\": \"2023-2023\",\n                \"name\": \"2023\"\n            }, {\n                \"id\": \"2022-2022\",\n                \"name\": \"2022\"\n            }, {\n                \"id\": \"2021-2021\",\n                \"name\": \"2021\"\n            }, {\n                \"id\": \"2020-2020\",\n                \"name\": \"2020\"\n            }, {\n                \"id\": \"1900-2019\",\n                \"name\": \"2020以前\"\n            }]\n        }, {\n            \"filterName\": \"channelChildTypeId\",\n            \"filterValueList\": [{\n                \"id\": \"462\",\n                \"name\": \"短剧\"\n            }, {\n                \"id\": \"465\",\n                \"name\": \"剧情\"\n            }, {\n                \"id\": \"464\",\n                \"name\": \"都市\"\n            }, {\n                \"id\": \"463\",\n                \"name\": \"爱情\"\n            }, {\n                \"id\": \"471\",\n                \"name\": \"古装\"\n            }, {\n                \"id\": \"486\",\n                \"name\": \"喜剧\"\n            }, {\n                \"id\": \"487\",\n                \"name\": \"动作\"\n            }, {\n                \"id\": \"474\",\n                \"name\": \"其他\"\n            }, {\n                \"id\": \"470\",\n                \"name\": \"奇幻\"\n            }, {\n                \"id\": \"485\",\n                \"name\": \"家庭\"\n            }, {\n                \"id\": \"473\",\n                \"name\": \"惊悚\"\n            }, {\n                \"id\": \"488\",\n                \"name\": \"悬疑\"\n            }, {\n                \"id\": \"494\",\n                \"name\": \"恐怖\"\n            }, {\n                \"id\": \"493\",\n                \"name\": \"军旅\"\n            }, {\n                \"id\": \"490\",\n                \"name\": \"网剧\"\n            }, {\n                \"id\": \"496\",\n                \"name\": \"战争\"\n            }, {\n                \"id\": \"491\",\n                \"name\": \"犯罪\"\n            }, {\n                \"id\": \"489\",\n                \"name\": \"冒险\"\n            }, {\n                \"id\": \"498\",\n                \"name\": \"运动\"\n            }, {\n                \"id\": \"495\",\n                \"name\": \"儿童\"\n            }, {\n                \"id\": \"492\",\n                \"name\": \"科幻\"\n            }]\n        }, {\n            \"filterName\": \"playPower\",\n            \"filterValueList\": [{\n                \"id\": \"2\",\n                \"name\": \"登录点播\"\n            }, {\n                \"id\": \"3\",\n                \"name\": \"VIP点播\"\n            }]\n        }],\n        \"sortList\": [{\n            \"sortType\": 1,\n            \"sortName\": \"最新\",\n            \"hasDefault\": false\n        }, {\n            \"sortType\": 2,\n            \"sortName\": \"人气\",\n            \"hasDefault\": true\n        }, {\n            \"sortType\": 3,\n            \"sortName\": \"评分\",\n            \"hasDefault\": false\n        }, {\n            \"sortType\": 4,\n            \"sortName\": \"热搜\",\n            \"hasDefault\": false\n        }]\n    },\n    \"operateCode\": 0\n}\n"},{"col_type":"movie_3","name":"api","path":"api","rule":"js:\nlet apis = {\n    host: \"https://m.yqktv888.com\",\n    appId: \"e6ddefe09e0349739874563459f56c54\",\n    appKey: \"3359de478f8d45638125e446a10ec541\",\n    apiUrl: \"https://txapi1.dbdd1.com/v1/api\",\n    query: function(urlpath, body) {\n        var result = JSON.parse(fetch(this.apiUrl + urlpath, {\n            headers: {\n                Referer: this.host,\n            },\n            body: body,\n            method: 'POST'\n        })).data;\n        if (result == null) {\n            return {}\n        }\n        if (result.hasOwnProperty('hasNext') && result.hasNext) {\n            putMyVar('nextVal', result.nextVal);\n        }\n        return result;\n    },\n    getrandom: function() {\n        let e = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\", \"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"],\n            n = \"\";\n        for (let r = 0; r < 32; r++) {\n            let o = parseInt(Math.random() * 61);\n            n += e[o]\n        }\n        return n\n    },\n    getUUID: function() {\n        return `${\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, r=>{            const o = Math.random() * 16 | 0;            return (r === \"x\" ? o : o & 3 | 8).toString(16)        }    )}-${Date.now().toString(16)}`\n    },\n    objKeySort: function(e) {\n        let n = Object.keys(e).sort(),\n            r = {};\n        for (let o = 0; o < n.length; o++) r[n[o]] = e[n[o]];\n        return r\n    },\n    sgin: function(e) {\n        let c = \"\";\n        let n = \"\";\n        for (var i in e) e[i] !== \"\" && (c += i + \"=\" + e[i] + \"&\");\n        c !== \"\" && (c = c + \"appKey=\" + this.appKey, n = md5(c)), e.sign = n\n        return e\n    },\n    getBody: function(body) {\n        body = body || {};\n        var domain = new java.net.URL(this.host).getHost();\n        var defobj = {\n            appId: apis.appId,\n            udid: apis.getUUID(),\n            requestId: apis.getrandom(),\n            reqDomain: domain,\n        }\n        var newbody = Object.assign({}, defobj, body);\n        var signobj = this.sgin(this.objKeySort(newbody));\n        return signobj;\n    }\n}\n\n$.exports = {\n    apis: apis,\n}"}],"title":"一起看","author":"zetalpha","version":0,"type":"video","url":"hiker://empty##fypage","col_type":"movie_3","class_name":"","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\n\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\n//eval(JSON.parse(request('hiker://page/yi?rule=α')).rule)\n\n//eval(fetch('http://127.0.0.1:8080/yi.js'));\n\neval(fetch('file:///storage/emulated/0/Download/web/yi.js'));\n\n\neval(JSON.parse(request('hiker://page/json')).rule)\n\nvar page = MY_PAGE;\n\nvar html = \"\";\nvar clist = [];\n\nfunction fillCate(list) {\n    return [\"<div class='cc'>\"].concat(list, ['</div>']);\n}\n\njson.data.filterList.forEach((x, i) => {\n    var className = x.filterName;\n    clist.push(\"dt_\" + className);\n    var classList = x.filterValueList.map(x => {\n        return `<a id=\"${x.id}\" name=\"${className}\">${x.name}</a>`\n    })\n    classList.unshift(`<a id=\"0\" name=\"${className}\">全部</a>`)\n    classList = fillCate(classList);\n    html += classList.join('\\n')\n})\n\nvar sortList = json.data.sortList.map((x, i) => {\n    return `<a id=\"${x.sortType}\" name=\"sortList\">${x.sortName}</a>`\n})\n\nfunction customSort(a, b) {\n    // 将包含id=\"2\"的元素排在前面\n    if (a.includes(\"id=2\")) {\n        return -1; // a排在b前面\n    } else if (b.includes(\"id=2\")) {\n        return 1; // b排在a前面\n    } else {\n        return 0; // 保持原始顺序\n    }\n}\n\nsortList.sort(customSort);\nclist.push(\"dt_sortList\");\nclist.push(\"nextVal\");\n\nif (page == 1) {\n    clearMyVar(\"nextVal\");\n}\n\nsortList = fillCate(sortList);\nhtml += sortList.join('\\n')\n\n//log(html)\n\nvar 定位信息 = [{\n    一级定位: 'body&&.cc',\n    小类: 'body&&a',\n    链接: '@js:' + $.toString(() => {\n        var k = pdfh(input, 'a&&name');\n        var v = pdfh(input, 'a&&id');\n        return {\n            type: k,\n            value: v,\n        };\n    }),\n}]\n\nvar k = json.data.filterList.map(key => {\n    var classList = key.filterValueList.map(x => {\n        return {\n            title: x.name,\n            url: {\n                type: key.filterName,\n                value: x.id,\n            }\n        }\n    })\n    classList.unshift({\n        title: '全部',\n        url: {\n            type: key.filterName,\n            value: 0,\n        }\n    })\n    return classList;\n});\n\nvar s = json.data.sortList.map(key => {\n    return {\n        title: key.sortName,\n        url: {\n            type: 'sortList',\n            value: key.sortType\n        }\n    }\n});\n\ns.sort((a, b) => {\n    if (a.url.value === 2) {\n        return -1; // value=2 的元素排在前面                \n    } else if (b.url.value === 2) {\n        return 1; // value=2 的元素排在前面 \n    }\n    return 0; // 保持其他元素的相对顺序不变 \n});\n\n\nvar 定位信息 = [{\n    json: k,\n}, {\n    json: [s],\n}]\n\nvar queryValueJson = [];\n\nclist.map(x => {\n    var k = getMyVar(x, '0')\n    if (k && k != '0' && x !== \"dt_sortList\") {\n        queryValueJson.push({\n            filerName: x.replace('dt_', ''),\n            filerValue: k\n        })\n    }\n})\n\nvar sortType = getMyVar('dt_sortList', '2');\n\n//log(listMyVarKeys())\n\nlet {\n    apis\n} = $.require('hiker://page/api');\n\nvar obj = {\n    nextCount: 18,\n    nextVal: getMyVar('nextVal', \"\"),\n    queryValueJson: JSON.stringify(queryValueJson),\n}\n\nif (sortType != '2') {\n    obj['sortType'] = Number(sortType);\n}\n\nvar sginobj = apis.getBody(obj);\n\nconst dc = dynamicClass({\n    分类颜色: getRangeColors()\n});\ndc.开启搜索().开启折叠(true).清除(clist).创建动态分类(定位信息);\n\nvar result = apis.query(\"/search/queryNow\", sginobj);\n\n//log(result.items.length)\n\nvar parseRule = {\n    list: 'items', //统一item\n    title: 'item.vodName',\n    desc: 'item.iconList[0]?item.iconList[0].iconText:item.score',\n    img: 'item.coverImg',\n    url: \"'?id='+item.vodId+'&'\",\n    col_type: 'movie_3_marquee',\n    ref: '@Referer=',\n    imt: true,\n    //debug:true,\n}\n\ntry {\n    Create.jsonList(d, result, parseRule);\n} catch (e) {\n    log(e.message)\n}\n\nsetResult(d);","searchFind":"js:\neval(JSON.parse(request('hiker://page/yi?rule=α')).rule)\n\nif (MY_PAGE == 1) {\n    clearMyVar(\"nextVal\");\n}\n\nvar key = getParam('key');\nvar d = [];\n\nlet {\n    apis\n} = $.require('hiker://page/api');\n\nvar result = apis.query(\"/search/search\", apis.getBody({\n    nextVal: getMyVar('nextVal', \"\"),\n    keyword: key,\n}));\n\n//log(result)\n\nvar parseRule = {\n    list: 'items', //统一item\n    title: 'item.vodName',\n    desc: 'item.iconList[0]?item.iconList[0].iconText:item.score',\n    img: 'item.coverImg',\n    url: \"'?id='+item.vodId+'&'\",\n    content:\"item.intro\",\n    ref: '@Referer=',\n    imt: true,\n    //debug:true,\n}\n\ntry {\n    Create.jsonList(d, result, parseRule);\n} catch (e) {\n    log(e.message)\n}\n\nsetResult(d)","search_url":"hiker://empty?key=**&fypage","group":"1⃣α","detail_col_type":"movie_1","detail_find_rule":"js:\nvar id = getParam('id');\n//log(id)\nvar d = [];\n\nlet {\n    apis\n} = $.require('hiker://page/api');\n\nMY_URL = apis.host + '/play/' + id;\n\nvar result = apis.query(\"/vodInfo/detail\", apis.getBody({\n    vodId: id,\n}));\n\neval(JSON.parse(request('hiker://page/er?rule=α')).rule);\n\nvar obj = {\n    titles: [result.areaName + ' ' + result.year, '““””' + result.score.fontcolor(\"#FF4500\")],\n    descs: [`演员:${result.actorList.map(x=>x.vodWorkerName).slice(0,5).join(' ')}`,\n        `导演:${result.directorList.map(x=>x.vodWorkerName).join(' ')}`\n    ]\n}\n\nvar plays = result.playerList;\n\nErji.preLoad();\nErji.close(['播放列表'], 0);\nErji.setCustom(obj, result.coverImg, {});\nErji.setDesc(result.intro); //剧情简介\nErji.setTabs2(plays.map(x => x.playerName), '播放列表', null, {\n    推送: true\n}, [0]);\nErji.setLists(plays.map(x => x.epList.map(k => {\n    return {\n        title: k.epName,\n        url: 'video://' + apis.host + '/play/' + id + '?epId=' + k.epId,\n    }\n})), getMyVar('er_播放列表', '0'))\n\nvar youlike = apis.query(\"/vodInfo/guessYouLike\", apis.getBody({\n    vodId: id,\n}));\nvar like = getItem('like', '1')\nd.push({\n    title: '猜你喜欢',\n    col_type: 'avatar',\n    img: 'https://hikerfans.com/tubiao/system/123.png',\n    url: 'toast://未实现',\n})\nif (like == '1') {\n    youlike.forEach(item => {\n        d.push({\n            title: item.vodName,\n            desc: item.iconList[0] ? item.iconList[0].iconText : item.score,\n            img: item.coverImg + '@Referer=',\n            col_type: 'movie_3_marquee',\n            url: $('hiker://empty##?id=' + item.vodId + '&#immersiveTheme#').rule((detail) => {\n                eval(detail)\n            }, MY_RULE.find_rule),\n            extra: {\n                img: item.coverImg + '@Referer=',\n                pageTitle: item.vodName,\n            }\n        })\n    })\n}\n\nErji.声明();\n\nfunction getUpdata(id, title) {\n    let {\n        apis\n    } = $.require('hiker://page/api?rule=' + title);\n    let {\n        Erji\n    } = $.require('hiker://page/er?rule=α', undefined, 24);\n    var result = apis.query(\"/vodInfo/detail\", apis.getBody({\n        vodId: id,\n    }));\n    var ep = result.playerList.map(x => x.epList);\n    var max = Erji.maxList(ep);\n    let name = max[max.length - 1].epName;\n    setResult('最新：' + name);\n}\n\nErji.updata(getUpdata, {\n    id: id,\n    title: MY_RULE.title\n})\n\n\n\n\n\nsetResult(d)","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"json\",\"path\":\"json\",\"rule\":\"js:\\n\\nvar json = {\\n    \\\"result\\\": true,\\n    \\\"msg\\\": \\\"\\\",\\n    \\\"data\\\": {\\n        \\\"filterList\\\": [{\\n            \\\"filterName\\\": \\\"channelId\\\",\\n            \\\"filterValueList\\\": [{\\n                \\\"id\\\": \\\"50\\\",\\n                \\\"name\\\": \\\"短剧\\\"\\n            }, {\\n                \\\"id\\\": \\\"3\\\",\\n                \\\"name\\\": \\\"电视剧\\\"\\n            }, {\\n                \\\"id\\\": \\\"2\\\",\\n                \\\"name\\\": \\\"电影\\\"\\n            }, {\\n                \\\"id\\\": \\\"8\\\",\\n                \\\"name\\\": \\\"动漫\\\"\\n            }, {\\n                \\\"id\\\": \\\"10\\\",\\n                \\\"name\\\": \\\"综艺\\\"\\n            }, {\\n                \\\"id\\\": \\\"5\\\",\\n                \\\"name\\\": \\\"体育\\\"\\n            }]\\n        }, {\\n            \\\"filterName\\\": \\\"areaId\\\",\\n            \\\"filterValueList\\\": [{\\n                \\\"id\\\": \\\"1\\\",\\n                \\\"name\\\": \\\"大陆\\\"\\n            }, {\\n                \\\"id\\\": \\\"3\\\",\\n                \\\"name\\\": \\\"美国\\\"\\n            }, {\\n                \\\"id\\\": \\\"8\\\",\\n                \\\"name\\\": \\\"韩国\\\"\\n            }, {\\n                \\\"id\\\": \\\"7\\\",\\n                \\\"name\\\": \\\"香港\\\"\\n            }, {\\n                \\\"id\\\": \\\"4\\\",\\n                \\\"name\\\": \\\"日本\\\"\\n            }, {\\n                \\\"id\\\": \\\"12\\\",\\n                \\\"name\\\": \\\"台湾\\\"\\n            }, {\\n                \\\"id\\\": \\\"2\\\",\\n                \\\"name\\\": \\\"英国\\\"\\n            }, {\\n                \\\"id\\\": \\\"5\\\",\\n                \\\"name\\\": \\\"加拿大\\\"\\n            }, {\\n                \\\"id\\\": \\\"9\\\",\\n                \\\"name\\\": \\\"新加坡\\\"\\n            }, {\\n                \\\"id\\\": \\\"10\\\",\\n                \\\"name\\\": \\\"法国\\\"\\n            }, {\\n                \\\"id\\\": \\\"11\\\",\\n                \\\"name\\\": \\\"泰国\\\"\\n            }, {\\n                \\\"id\\\": \\\"13\\\",\\n                \\\"name\\\": \\\"印度\\\"\\n            }, {\\n                \\\"id\\\": \\\"14\\\",\\n                \\\"name\\\": \\\"西班牙\\\"\\n            }, {\\n                \\\"id\\\": \\\"15\\\",\\n                \\\"name\\\": \\\"俄罗斯\\\"\\n            }, {\\n                \\\"id\\\": \\\"16\\\",\\n                \\\"name\\\": \\\"马来西亚\\\"\\n            }, {\\n                \\\"id\\\": \\\"6\\\",\\n                \\\"name\\\": \\\"其他\\\"\\n            }]\\n        }, {\\n            \\\"filterName\\\": \\\"year\\\",\\n            \\\"filterValueList\\\": [{\\n                \\\"id\\\": \\\"2023-2023\\\",\\n                \\\"name\\\": \\\"2023\\\"\\n            }, {\\n                \\\"id\\\": \\\"2022-2022\\\",\\n                \\\"name\\\": \\\"2022\\\"\\n            }, {\\n                \\\"id\\\": \\\"2021-2021\\\",\\n                \\\"name\\\": \\\"2021\\\"\\n            }, {\\n                \\\"id\\\": \\\"2020-2020\\\",\\n                \\\"name\\\": \\\"2020\\\"\\n            }, {\\n                \\\"id\\\": \\\"1900-2019\\\",\\n                \\\"name\\\": \\\"2020以前\\\"\\n            }]\\n        }, {\\n            \\\"filterName\\\": \\\"channelChildTypeId\\\",\\n            \\\"filterValueList\\\": [{\\n                \\\"id\\\": \\\"462\\\",\\n                \\\"name\\\": \\\"短剧\\\"\\n            }, {\\n                \\\"id\\\": \\\"465\\\",\\n                \\\"name\\\": \\\"剧情\\\"\\n            }, {\\n                \\\"id\\\": \\\"464\\\",\\n                \\\"name\\\": \\\"都市\\\"\\n            }, {\\n                \\\"id\\\": \\\"463\\\",\\n                \\\"name\\\": \\\"爱情\\\"\\n            }, {\\n                \\\"id\\\": \\\"471\\\",\\n                \\\"name\\\": \\\"古装\\\"\\n            }, {\\n                \\\"id\\\": \\\"486\\\",\\n                \\\"name\\\": \\\"喜剧\\\"\\n            }, {\\n                \\\"id\\\": \\\"487\\\",\\n                \\\"name\\\": \\\"动作\\\"\\n            }, {\\n                \\\"id\\\": \\\"474\\\",\\n                \\\"name\\\": \\\"其他\\\"\\n            }, {\\n                \\\"id\\\": \\\"470\\\",\\n                \\\"name\\\": \\\"奇幻\\\"\\n            }, {\\n                \\\"id\\\": \\\"485\\\",\\n                \\\"name\\\": \\\"家庭\\\"\\n            }, {\\n                \\\"id\\\": \\\"473\\\",\\n                \\\"name\\\": \\\"惊悚\\\"\\n            }, {\\n                \\\"id\\\": \\\"488\\\",\\n                \\\"name\\\": \\\"悬疑\\\"\\n            }, {\\n                \\\"id\\\": \\\"494\\\",\\n                \\\"name\\\": \\\"恐怖\\\"\\n            }, {\\n                \\\"id\\\": \\\"493\\\",\\n                \\\"name\\\": \\\"军旅\\\"\\n            }, {\\n                \\\"id\\\": \\\"490\\\",\\n                \\\"name\\\": \\\"网剧\\\"\\n            }, {\\n                \\\"id\\\": \\\"496\\\",\\n                \\\"name\\\": \\\"战争\\\"\\n            }, {\\n                \\\"id\\\": \\\"491\\\",\\n                \\\"name\\\": \\\"犯罪\\\"\\n            }, {\\n                \\\"id\\\": \\\"489\\\",\\n                \\\"name\\\": \\\"冒险\\\"\\n            }, {\\n                \\\"id\\\": \\\"498\\\",\\n                \\\"name\\\": \\\"运动\\\"\\n            }, {\\n                \\\"id\\\": \\\"495\\\",\\n                \\\"name\\\": \\\"儿童\\\"\\n            }, {\\n                \\\"id\\\": \\\"492\\\",\\n                \\\"name\\\": \\\"科幻\\\"\\n            }]\\n        }, {\\n            \\\"filterName\\\": \\\"playPower\\\",\\n            \\\"filterValueList\\\": [{\\n                \\\"id\\\": \\\"2\\\",\\n                \\\"name\\\": \\\"登录点播\\\"\\n            }, {\\n                \\\"id\\\": \\\"3\\\",\\n                \\\"name\\\": \\\"VIP点播\\\"\\n            }]\\n        }],\\n        \\\"sortList\\\": [{\\n            \\\"sortType\\\": 1,\\n            \\\"sortName\\\": \\\"最新\\\",\\n            \\\"hasDefault\\\": false\\n        }, {\\n            \\\"sortType\\\": 2,\\n            \\\"sortName\\\": \\\"人气\\\",\\n            \\\"hasDefault\\\": true\\n        }, {\\n            \\\"sortType\\\": 3,\\n            \\\"sortName\\\": \\\"评分\\\",\\n            \\\"hasDefault\\\": false\\n        }, {\\n            \\\"sortType\\\": 4,\\n            \\\"sortName\\\": \\\"热搜\\\",\\n            \\\"hasDefault\\\": false\\n        }]\\n    },\\n    \\\"operateCode\\\": 0\\n}\\n\"},{\"col_type\":\"movie_3\",\"name\":\"api\",\"path\":\"api\",\"rule\":\"js:\\nlet apis = {\\n    host: \\\"https://m.yqktv888.com\\\",\\n    appId: \\\"e6ddefe09e0349739874563459f56c54\\\",\\n    appKey: \\\"3359de478f8d45638125e446a10ec541\\\",\\n    apiUrl: \\\"https://txapi1.dbdd1.com/v1/api\\\",\\n    query: function(urlpath, body) {\\n        var result = JSON.parse(fetch(this.apiUrl + urlpath, {\\n            headers: {\\n                Referer: this.host,\\n            },\\n            body: body,\\n            method: 'POST'\\n        })).data;\\n        if (result == null) {\\n            return {}\\n        }\\n        if (result.hasOwnProperty('hasNext') && result.hasNext) {\\n            putMyVar('nextVal', result.nextVal);\\n        }\\n        return result;\\n    },\\n    getrandom: function() {\\n        let e = [\\\"0\\\", \\\"1\\\", \\\"2\\\", \\\"3\\\", \\\"4\\\", \\\"5\\\", \\\"6\\\", \\\"7\\\", \\\"8\\\", \\\"9\\\", \\\"A\\\", \\\"B\\\", \\\"C\\\", \\\"D\\\", \\\"E\\\", \\\"F\\\", \\\"G\\\", \\\"H\\\", \\\"I\\\", \\\"J\\\", \\\"K\\\", \\\"L\\\", \\\"M\\\", \\\"N\\\", \\\"O\\\", \\\"P\\\", \\\"Q\\\", \\\"R\\\", \\\"S\\\", \\\"T\\\", \\\"U\\\", \\\"V\\\", \\\"W\\\", \\\"X\\\", \\\"Y\\\", \\\"Z\\\", \\\"a\\\", \\\"b\\\", \\\"c\\\", \\\"d\\\", \\\"e\\\", \\\"f\\\", \\\"g\\\", \\\"h\\\", \\\"i\\\", \\\"j\\\", \\\"k\\\", \\\"l\\\", \\\"m\\\", \\\"n\\\", \\\"o\\\", \\\"p\\\", \\\"q\\\", \\\"r\\\", \\\"s\\\", \\\"t\\\", \\\"u\\\", \\\"v\\\", \\\"w\\\", \\\"x\\\", \\\"y\\\", \\\"z\\\"],\\n            n = \\\"\\\";\\n        for (let r = 0; r < 32; r++) {\\n            let o = parseInt(Math.random() * 61);\\n            n += e[o]\\n        }\\n        return n\\n    },\\n    getUUID: function() {\\n        return `${\\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(/[xy]/g, r=>{            const o = Math.random() * 16 | 0;            return (r === \\\"x\\\" ? o : o & 3 | 8).toString(16)        }    )}-${Date.now().toString(16)}`\\n    },\\n    objKeySort: function(e) {\\n        let n = Object.keys(e).sort(),\\n            r = {};\\n        for (let o = 0; o < n.length; o++) r[n[o]] = e[n[o]];\\n        return r\\n    },\\n    sgin: function(e) {\\n        let c = \\\"\\\";\\n        let n = \\\"\\\";\\n        for (var i in e) e[i] !== \\\"\\\" && (c += i + \\\"=\\\" + e[i] + \\\"&\\\");\\n        c !== \\\"\\\" && (c = c + \\\"appKey=\\\" + this.appKey, n = md5(c)), e.sign = n\\n        return e\\n    },\\n    getBody: function(body) {\\n        body = body || {};\\n        var domain = new java.net.URL(this.host).getHost();\\n        var defobj = {\\n            appId: apis.appId,\\n            udid: apis.getUUID(),\\n            requestId: apis.getrandom(),\\n            reqDomain: domain,\\n        }\\n        var newbody = Object.assign({}, defobj, body);\\n        var signobj = this.sgin(this.objKeySort(newbody));\\n        return signobj;\\n    }\\n}\\n\\n$.exports = {\\n    apis: apis,\\n}\"}]","proxy":"","icon":"https://m.yqktv888.com/favicon.ico"}